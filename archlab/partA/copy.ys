#Execution begins at address 0
	.pos 0
	irmovq stack, %rsp
	call main
	halt

#source bloc
	.align 8
src:
	.quad 0x00a
	.quad 0x0b0
	.quad 0xc00

#destination block
dest:
	.quad 0x111
	.quad 0x222
	.quad 0x333

main:
	irmovq src, %rdi
	irmovq dest, %rsi
	irmovq $3, %rdx
	call copy_block
	ret
#long copy_block(long *src, long *dest, long len)
#start in %rdi, dest in %rsi, len in %rdx
copy_block:
	pushq %rbx
	irmovq $8, %r8
	irmovq $1, %r9
	xorq %rax, %rax
	andq %rdx, %rdx
	jmp test
loop:
	mrmovq (%rdi), %rbx
	addq %r8, %rdi
	rmmovq %rbx, (%rsi)
	addq %r8, %rsi
	xorq %rbx, %rax
	subq %r9, %rdx
	
test:
	jne loop
	ret

#stack starts here
	.pos 0x200
stack:
